appId: com.soonlist.app.dev
name: Deep Links
---
# Close the app
- stopApp:
    appId: com.soonlist.app.dev

# Open the app with a deep link
- openLink: "soonlist.dev://"

# Deeplink through dev client
- waitForAnimationToEnd:
    timeout: 5000
- tapOn:
    point: 87%,50%

# Assert that the app is open
- assertVisible: "Upcoming"

# Close the app
- stopApp:
    appId: com.soonlist.app.dev

# Open the app with a deep link
- openLink: "soonlist.dev://event/id"

# Deeplink through dev client
- waitForAnimationToEnd:
    timeout: 5000
- tapOn:
    point: 87%,50%

# Assert that the app is open to the correct screen
- assertVisible: "Event Details"

# Close the app
- stopApp:
    appId: com.soonlist.app.dev

# Open the app with a deep link
- openLink: "soonlist.dev://new?text=Basketball tomorrow at 7pm at Laurelhurst Park"

# Deeplink through dev client
- waitForAnimationToEnd:
    timeout: 5000
- tapOn:
    point: 87%,50%

# Assert that the app is open to the correct screen
- assertVisible: "Describe event"
- tapOn: "Capture event"

# Assert that the app returns to the upcoming screen
- assertVisible: "Upcoming"

# Assert that the event is in the upcoming list
- assertVisible: .*basketball.*

# Add event media
- addMedia:
    - "assets/design.png"

- tapOn: 
    text: randText  # Any random text that does not exist in the UI
    optional: true  # This should be true so that the test won't fail
    repeat: 2
    delay: 1000

- tapOn:
    point: 50%,93%

- assertVisible: "Select image"

- tapOn: "Capture event"

- assertVisible: "Upcoming"

- assertVisible: .*design.*
